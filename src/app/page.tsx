"use client"
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot } from "@/components/ui/input-otp";
import { Progress } from "@/components/ui/progress";
import { DndContext, useDraggable, useDroppable } from "@dnd-kit/core";
import { CSS } from '@dnd-kit/utilities';
import { motion } from "motion/react";
import Image from "next/image";
import { useEffect, useState } from "react";
import { AnimatedHeart } from "./_components/AnimatedHearts";

const TOTAL_STEPS = 8;
export default function Home() {
  const [hearts, setHearts] = useState<{ id: number; x: number; y: number; size: number }[]>([])
  const [step, setStep] = useState(1)
  const [stepsComplete, setStepComplete] = useState<Record<string, boolean>>({
    step1: false,
    step2: false,
    step3: false,
  })

  const updateStepComplete = (step: number, value: boolean) => {
    setStepComplete((prev) => ({ ...prev, [`step${step}`]: value }))
  }


  const nextStep = () => {
    if (stepsComplete[`step${step}`]) {
      setStep((prevStep) => Math.min(prevStep + 1, TOTAL_STEPS));  // Asegura que no se pase del paso 3
    }
  };

  const prevStep = () => {
    setStep((prevStep) => Math.max(prevStep - 1, 1));  // Asegura que no se baje del paso 1
  };

  useEffect(() => {
    const createHeart = () => {
      if (hearts.length < 100) {
        const newHeart = {
          id: Date.now(),
          x: Math.random() * window.innerWidth,
          y: Math.random() * window.innerHeight,
          size: Math.random() * 20 + 10,
        }
        setHearts((prevHearts) => [...prevHearts, newHeart])
      }
    }

    const interval = setInterval(createHeart, 1)

    return () => clearInterval(interval)
  }, [hearts])
  return (
    <div className="relative  h-screen overflow-hidden bg-gradient-to-b from-pink-400 to-pink-600 flex items-center justify-center">
      {hearts.map((heart) => (
        <AnimatedHeart key={heart.id} x={heart.x} y={heart.y} size={heart.size} />
      ))}
      <motion.div
        className="absolute text-center p-8"
        initial={{ scale: 0, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ duration: 1, delay: 0.5 }}
      >
        <div className="p-8 w-[1000px] h-fit bg-white rounded-full hover:scale-105 transition-all shadow-2xl">
          <div className="flex justify-center w-full h-full ">
            <div className="grid grid-cols-1 gap-4">
              <div className="col-span-1 flex justify-center items-center">
                {/* {JSON.stringify(stepsComplete, null, 2)} */}
                <Progress value={(step / TOTAL_STEPS) * 100} className="mb-4 w-1/2 " />
              </div>
              {
                step === 1 && <StepOne updateStepComplete={updateStepComplete} />

              }
              {
                step === 2 && <StepTwo updateStepComplete={updateStepComplete} />
              }
              {
                step === 3 && <StepThree updateStepComplete={updateStepComplete} />
              }
              {
                step === 4 && <StepFour updateStepComplete={updateStepComplete} />
              }
              {
                step === 5 && <StepFive updateStepComplete={updateStepComplete} />
              }
              {
                step === 6 && <StepSix updateStepComplete={updateStepComplete} />
              }
              {
                step === 7 && <StepSeven updateStepComplete={updateStepComplete} />
              }
              {
                step === 8 && <StepFour updateStepComplete={updateStepComplete} />
              }
              {
                step === 9 && <StepFour updateStepComplete={updateStepComplete} />
              }
              {
                step === 10 && <StepFour updateStepComplete={updateStepComplete} />
              }

              <div className="col-span-1 flex justify-center items-center">
                <Button variant="outline" onClick={prevStep} disabled={step === 1}>
                  Volver
                </Button>
                <Button
                  variant="outline"
                  onClick={nextStep}
                  disabled={!stepsComplete[`step${step}`]}
                >
                  {"Continuar"}
                </Button>
              </div>

            </div>
          </div>
        </div>
      </motion.div>
    </div>
  );
}


const StepOne = ({ updateStepComplete }: { updateStepComplete: (step: number, value: boolean) => void }) => {
  return (
    <div className="col-span-1 flex justify-center items-center ">
      <article className="text-wrap">
        <h1 className="text-center font-bold">
          ¬°Hola mi amor, feliz cumple mes! üéâ
        </h1>
        <div className="pl-10 pr-10 mt-2 h-48 overflow-scroll">

          <h1 className="text-left">
            Primero que nada quer√≠a darle las gracias a pap√° por ponerte en mi vida,
            eres la mujer que siempre so√±√©, pap√° se pas√≥ de bueno al darme una princesita tan hermosa como t√∫.
          </h1>
          <br />
          <h1 className="text-left">
            Decirte que estoy muy feliz de estar a tu lado, de poder compartir momentos juntos, de poder re√≠r y llorar,
            pero sobre todo de poder amarnos. Durante estos <strong>2 a√±os y 8 meses de relaci√≥n</strong> hemos crecido de una manera incre√≠ble,
            hemos aprendido a conocernos mas y tambien hemos aprendido a resolver nuestras diferencias.

            Pero lo m√°s importante que recalco es que juntos nos hemos acercado a pap√° y hemos dejado que √©l nos transforme
            permitiendo que nuestra relaci√≥n sea guiada por √©l, por lo que estos a√±os juntos son el resultado
            del plan perfecto de Dios, estoy seguro de que nuestra relaci√≥n se esta construyendo en la roca y que no hay nada debajo ni sobre la
            tierra que pueda separarnos si es la voluntad de pap√°.
          </h1>
          <br />
          <h1 className="text-left">
            Mi amor, te he visto crecer durante estos a√±os y estoy muy orgulloso de la mujer que te has convertido
            y de la mujer que ser√°s en el futuro, estoy seguro de que pap√° tiene grandes planes para ti y que juntos los alcanzaremos.
          </h1>
          <br />
          <h1 className="text-left">
            Bueno, y te preguntar√°s: ¬øQu√© es esto? ¬øPor qu√© me pones a leer tanto? jajaja üôÄ
          </h1>
          <h1 className="text-left">
            Esto esto es una peque√±a sorpresa que te quer√≠a dar, algo hecho por mi con mucho amor para ti, espero que te guste y te haga sentir especial y amada. üíñ
          </h1>
          <br />
          <h1 className="text-left font-bold">
            Instrucciones:
          </h1>
          <ul className="text-start list-decimal">
            <li>La primera es que leas todo detenidamente, ya que es importante para que puedas pasar las etapas.</li>
            <li>Esto consta de N etapas, si ene asi como suena, N etapas en las cuales te ir√© poniendo retos,
              ya sea de adivinanzas con fechas, numeros, textos u otras cosas. S√© que eres creativa as√≠ que ya entender√°s.</li>
            <li> <span className="font-semibold">Las pistas:</span> es importante que le eches un ojo bien a la p√°gina cuando te encuentres resolviendo las
              adivinanzas, estas pueden estar en el <span className="underline">c√≥digo</span>, visualmente en la p√°gina o escondidos tambien en la p√°gina, tambi√©n
              pueden haber pistas en las im√°genes, en fin, tienes que estar muy atenta ya que tendr√°s que buscar en todos lados.
            </li>
            <li>
              Cuando estes lista para continuar, solo tienes que darle click al bot√≥n de continuar, pero si te sientes perdida o no puedes resolverlo
              puedes darle click al bot√≥n de volver y te llevar√° a la etapa anterior.
            </li>
            <li>
              <strong>Usa el cursor, me refiero al click del mouse para revisar por la pantalla, quiz√°s pueden haber cosas escondidas.</strong>
              por ejemplo, pasa el mouse entre el punto 5 y 6, quiz√°s encuentres algo. üòâ
              <br />
              <span className="opacity-0  hover:opacity-100"> Este es un texto escondido, es un ejemplo de lo que te puedes encontrar y  solo se activa al pasar el mouse por encima.üòâ  </span>
            </li>
            <li>
              Por ultimo, disfruta y no hagas trampa pillin. üòè
            </li>
          </ul>
          <br />
          <h1 className="font-extrabold">
            ¬°Buena suerte mi amor! üíñ
          </h1>

          <Button variant='outline' onClick={() => updateStepComplete(1, true)} >
            ¬°ESTOY LISTA!
          </Button>
          {/* <span className="hidden">la contrase√±a es: 29 de marzo de 2022</span> */}
        </div>
      </article>
    </div>
  )
}

const StepTwo = ({ updateStepComplete }: { updateStepComplete: (step: number, value: boolean) => void }) => {

  const handleInput = (value: string) => {
    console.log(value)
    if (value === '290322') {
      updateStepComplete(2, true)
    }
  }
  return (
    <>
      <div className="col-span-1 flex justify-center items-center">
        <article className="text-wrap">
          <h1 className="text-center font-bold">
            Bien, este es tu primer reto mi amor! üéâ
          </h1>
          <div className="pl-10 pr-10 mt-2 overflow-scroll">
            <ul className="text-start list-decimal">

              <li>
                &quot;Un d√≠a de marzo, casi al final,
                donde un n√∫mero 29 comenz√≥ a brillar.
                Aquel momento, con excusa de fotos y un perfil,
                se transform√≥ en algo m√°s que un beso sutil.&quot;
              </li>
              <li className="opacity-0 hover:opacity-100">
                La contrase√±a es una fecha importante para nosotros.
              </li>
              <li className="opacity-0 hover:opacity-100">
                Apa! encontraste una pista, transforma este codigo: ..--- ----. ----- ..--- ..--- ..---
              </li>
            </ul>
          </div>
        </article>
      </div>
      <div className="col-span-1 flex justify-center items-center">
        <InputOTP maxLength={6} onChange={(value) => handleInput(value)} >
          <InputOTPGroup>
            <InputOTPSlot index={0} />
            <InputOTPSlot index={1} />
          </InputOTPGroup>
          <InputOTPSeparator />
          <InputOTPGroup>
            <InputOTPSlot index={2} />
            <InputOTPSlot index={3} />
          </InputOTPGroup>
          <InputOTPSeparator />
          <InputOTPGroup>
            <InputOTPSlot index={4} />
            <InputOTPSlot index={5} />
          </InputOTPGroup>
        </InputOTP>
      </div>
    </>
  )
}

const StepThree = ({ updateStepComplete }: { updateStepComplete: (step: number, value: boolean) => void }) => {

  const handleInput = (value: string) => {
    console.log(value)
    if (value === 'futaleufu') {

      updateStepComplete(3, true)
    }
  }
  return (
    <>
      <div className="col-span-1 flex justify-center items-center">
        <article className="text-wrap">
          <h1 className="text-center font-bold">
            Bien, vamos por el segundo! üéâ
          </h1>
          <div className="pl-10 pr-10 mt-2 overflow-scroll">
            <ul className="text-start list-decimal">
              <li className="">
                &quot;Un nombre curioso, algo un tanto peculiar,
                esconde un r√≠o y un paisaje sin igual.
                A veces suena a futuro, otras a un paisaje de ensue√±o,
                y si juntas todo, sabes d√≥nde estuvo nuestro lugar de sue√±o.&quot;
              </li>
              <li className="opacity-0 hover:opacity-100">
                La contrase√±a es una LUGAR importante para nosotros.
              </li>
            </ul>
          </div>
        </article>
      </div>
      <div className="col-span-1 flex justify-center items-center">

        <Input type="password" placeholder="Ingrese la respuesta" className="w-40" onChange={(value) => handleInput(value.target.value)} />
      </div>
    </>
  )
}

const StepFour = ({ updateStepComplete }: { updateStepComplete: (step: number, value: boolean) => void }) => {
  const handleInput = (value: string) => {
    console.log(value)
    if (value === 'hamburguesa') {

      updateStepComplete(4, true)
    }
  }
  return (
    <>
      <div className="col-span-1 flex justify-center items-center">
        <article className="text-wrap">
          <h1 className="text-center font-bold">
            Excelenteeee, vamos por el cuarto! üéâ
          </h1>
          <div className="pl-10 pr-10 mt-2 overflow-scroll">
            <ul className="text-start list-decimal">
              <li className="">
                &quot;En un pan suave, todo se enciende,
                con carne, queso y sabor que sorprende.
                Es nuestro placer, no importa el d√≠a,
                cuando la vida pide algo de alegr√≠a.
                Junto a papas, salsa y un toque de amor,
                es la comida que nos da el mejor sabor.&quot;
              </li>
              <li className="opacity-0 hover:opacity-100">
                La contrase√±a es una comida que siempre comemos.
              </li>
            </ul>
          </div>
        </article>
      </div>
      <div className="col-span-1 flex justify-center items-center">

        <Input type="password" placeholder="Ingrese la respuesta" className="w-40" onChange={(value) => handleInput(value.target.value)} />
      </div>
    </>
  )
}


const StepFive = ({ updateStepComplete }: { updateStepComplete: (step: number, value: boolean) => void }) => {
  const handleInput = (value: string) => {
    console.log(value)
    if (value === 'umpalumpa') {
      updateStepComplete(5, true)
    }
  }
  return (
    <>
      <div className="col-span-1 flex justify-center items-center">
        <article className="text-wrap">
          <h1 className="text-center font-bold">
            Excelenteeee, vamos por el Quinto! üéâ
          </h1>
          <div className="pl-10 pr-10 mt-2 overflow-scroll">
            <ul className="text-start list-decimal">
              <li className="">
                &quot;
                En un mundo de fantas√≠a, lleno de dulce y color,
                hay un peque√±o ser travieso, que causa gran ardor.
                No es un Oompa Loompa, pero su nombre suena igual,
                y con su magia, se vuelve esencial.
                Peque√±o y juguet√≥n, a veces t√≠mido,
                pero en el momento adecuado, siempre es divertido.&quot;
              </li>
              <li className="opacity-0 hover:opacity-100">
                La contrase√±a es traviesa y juguetona, no tiene que estar bien escrita.
              </li>
            </ul>
          </div>
        </article>
      </div>
      <div className="col-span-1 flex justify-center items-center">

        <Input type="password" placeholder="Ingrese la respuesta" className="w-40" onChange={(value) => handleInput(value.target.value)} />
      </div>
    </>
  )
}

const StepSix = ({ updateStepComplete }: { updateStepComplete: (step: number, value: boolean) => void }) => {
  const initialImages = [
    { id: '1', src: '/foto-3.jpeg', label: 'Tercera' },
    { id: '2', src: '/foto-2.jpg', label: 'Segunda' },
    { id: '3', src: '/cascada-1.jpeg', label: 'Primera' },
  ];

  const [images, setImages] = useState(initialImages);

  function handleDragEnd(event) {
    const { active, over } = event;
    if (over) {
      const oldIndex = images.findIndex(img => img.id === active.id);
      const newIndex = images.findIndex(img => img.id === over.id);
      const newImages = [...images];
      const [movedImage] = newImages.splice(oldIndex, 1);
      newImages.splice(newIndex, 0, movedImage);
      setImages(newImages);
    }
  }

  useEffect(() => {
    if (images.every((image, index) => image.id === (images.length - index).toString())) {
      updateStepComplete(6, true);
    }
  }, [images]);

  return (
    <>
      <h1 className="text-center font-bold">
        Excelenteeee, vamos por el sexto! üéâ
      </h1>
      <h1 className="text-center font-bold">
        Debes ordenar las imagenes desde la mas antigua a la mas nueva.
      </h1>
      <DndContext onDragEnd={handleDragEnd}>
        <Droppable id="droppable">
          {images.map(image => (
            <Draggable key={image.id} id={image.id}>
              <Image src={image.src} alt={image.label} width={200} height={200} className="rounded-sm" />
            </Draggable>
          ))}
        </Droppable>
      </DndContext>
    </>
  );
}

function Droppable(props) {
  const { isOver, setNodeRef } = useDroppable({
    id: props.id,
  });
  const style = {
    opacity: isOver ? 1 : 0.9,
  };

  return (
    <div ref={setNodeRef} style={style} className="col-span-1 flex justify-center items-center">
      {props.children}
    </div>
  );
}

function Draggable(props) {
  const { attributes, listeners, setNodeRef, transform } = useDraggable({
    id: props.id,
  });
  const style = {
    transform: CSS.Translate.toString(transform),
  };

  return (
    <button ref={setNodeRef} style={style} {...listeners} {...attributes} className="col-span-1 flex justify-center items-center">
      {props.children}
    </button>
  );
}

const StepSeven = ({ updateStepComplete }: { updateStepComplete: (step: number, value: boolean) => void }) => {
  return (
    <div className="col-span-1 flex justify-center items-center">
      <article className="text-wrap">
        <h1 className="text-center font-bold">
          Ahora mirame a los ojitos que te quiero decir algo muuuy lindo üëÄüíò
        </h1>
      </article>
    </div>
  )
}

